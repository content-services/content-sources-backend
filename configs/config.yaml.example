kafka:
  auto:
    offset:
      reset: latest
    commit:
      interval:
        ms: 5000
  bootstrap:
    servers: localhost:9092
  group:
    id: content-sources
  message:
    send:
      max:
        retries: 15
  request:
    timeout:
      ms: 30000
    required:
      acks: -1
  retry:
    backoff:
      ms: 100
  timeout: 10000
  topics:
    - platform.notifications.ingress
  # sasl:
  #   username: someusername
  #   passowrd: somepassword
  #   mechanism: somemechanism
  #   protocol: someprotocol
database:
  host: localhost
  port: 5433
  user: content
  password: content
  name: content
  slow_query_duration: 200ms
tasking:
  pgx_logging: false
  heartbeat: 1m
  worker_count: 3
  retry_wait_upper_bound: 12h
  pool_limit: 20
logging:
  level: debug
  metrics_level: debug
  db_level: debug
  console: True
  color: True
cloudwatch:
  region:
  group:
  stream:
  key:
  secret:
  session:
certs:
  # Full path to CDN access cert.  Leave blank if you do not have one.
  # cert_path: "/home/<user>/cdncert/cert.pem"
options:
  paged_rpm_inserts_limit: 100
  introspect_api_time_limit_sec: 0
  enable_notifications: true
  template_event_topic: "platform.content-sources.template"
  snapshot_retain_days_limit: 365
  feature_filter: ["RHEL-OS-x86_64"]
  entitle_all: true
metrics:
  path: "/metrics"
  port: 9000
  collection_frequency: 60

# sentry:
#   dsn: https://public@sentry.example.com/1

# Let you customize configurations for
# the client services
clients:
  # rbac_enabled True enable the middleware to check the rbac permissions
  # and when we add the option 'mock_rbac', it determines if the mock_rbac
  # service will be started.
  # rbac_enabled = True enable the middleware to check permissions and
  # start the mock_rbac service when it is indicated.
  # rbac_enabled = False disable the middleware to check permissions and
  # the mock_rbac service never start, even if it is indicated.
  rbac_enabled: False
  # rbac_enabled: True
  # rbac_base_url: http://localhost:8800/api/rbac/v1
  # rbac_timeout: 30
  candlepin:
    server: http://localhost:8181/candlepin
    username: admin
    password: admin
    devel_org: true
    client_cert:
    client_key:
  pulp:
    server: http://localhost:8080
    username: admin
    password: password
    storage_type: local #object or local
    download_policy: on_demand #on_demand or immediate
    guard_subject_dn: "some_dn"
    custom_repo_content_guards: false
    database:
      host: localhost
      port: 5432
      user: pulp
      password: password
      name: pulp
    custom_repo_objects:
      url: http://minio:9000
      access_key: test
      secret_key: password
      name: test
      region: rdu
  pulp_log_parser:
    cloudwatch:
      key:
      secret:
      group:
      region: us-east-1
    s3:
      name:
      access_key:
      secret_key:
      region:
      file_prefix:

  redis:
    host: localhost
    port: 6379
    db: 1
    expiration:
      rbac: 1m
      pulp_content_path: 1h
      subscription_check: 1h
      roadmap: 24h
  feature_service:
    server: #https://feature.stage.api.redhat.com/features/v1
    client_cert:
    client_key:
    ca_cert:
    client_cert_path:
    client_key_path:
    ca_cert_path:
  roadmap:
    server: #https://console.stage.redhat.com/api/roadmap/v1
    username:
    password:
    proxy:
  kessel:
    server: localhost:8484
    auth:
      enabled:
      client_id:
      client_secret:
      oidc_issuer:
      grpc_insecure:
    timeout: 30s


# Configuration for the mocks
mocks:
  rbac:
    # Update with your account number for admin
    user_read_write: ["jdoe@example.com"]
    # Update with yout account number for viewer
    user_read: ["tdoe@example.com"]
    user_no_permissions: ["xdoe@example.com"]
  kessel:
      # User permission categories (applied to all organizations)
      user_read_write: ["write-user"]
      user_read: ["read-user"]
      user_no_permissions: ["no-perms-user"]

features:
  snapshots:
    enabled: true
    accounts: #["snapAccount"]
    users: #["snapUser"]
    organizations: #["snapOrg"]
  admin_tasks:
    enabled: true
    accounts: #["adminAccount"]
    users: #["adminUser"]
    organizations: #["adminOrg"]
  community_repos:
    enabled: true
  kessel:
    enabled: false
  allow_custom_epel_creation:
    enabled: true
