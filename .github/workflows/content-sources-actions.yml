name: build-test
on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'
jobs:
  openapidiff:
    name: Openapi diff
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: "1.20"
      - run: |
          go get -u github.com/swaggo/swag/cmd/swag
      - run: |
          make openapi
      - run: |
          git diff --exit-code api/openapi.json

  openapivalidate:
    name: openapi validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: openapi-generators/openapitools-generator-action@v1
        with:
          generator: python
          openapi-file: api/openapi.json

  gofmt:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: "1.20"
      - uses: Jerome1337/gofmt-action@v1.0.4

  govet:
    name: Vet
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: "1.20"
      - run: |
          go vet ./...
  golangci:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: "1.20"
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.54.2
          skip-go-installation: true
          args: --enable gci,bodyclose,forcetypeassert,misspell --timeout=5m

  gotest:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5433:5432
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: "1.20"
      - name: unit tests
        run: |
          make get-deps ${PWD}/release/dbmigrate db-migrate-up test-unit
        env:
          DATABASE_HOST: localhost
          DATABASE_PORT: 5433
          DATABASE_USER: postgres
          DATABASE_NAME: postgres
          DATABASE_PASSWORD: postgres
      - name: start pulp
        uses: isbang/compose-action@v1.4.1
        with:
          compose-file: ./compose_files/pulp/docker-compose.yml
          down-flags: --volumes
      - name: Wait for pulp
        run: |
          docker run --network=host --rm -v ${PWD}:/local curlimages/curl  \
            curl --retry-all-errors --fail --retry-delay 10 --retry 32 --retry-max-time 240 http://localhost:8080/pulp/default/api/v3/repositories/rpm/rpm/  -u admin:password
          sleep 30
      - name: integration tests
        run: |
          make test-integration
        env:
          DATABASE_HOST: localhost
          DATABASE_PORT: 5433
          DATABASE_USER: postgres
          DATABASE_NAME: postgres
          DATABASE_PASSWORD: postgres
          CLIENTS_PULP_SERVER: http://localhost:8080
          CLIENTS_PULP_USERNAME: admin
          CLIENTS_PULP_PASSWORD: password
      - name: db migration tests
        run: |
          make test-db-migrations
        env:
          DATABASE_HOST: localhost
          DATABASE_PORT: 5433
          DATABASE_USER: postgres
          DATABASE_NAME: postgres
          DATABASE_PASSWORD: postgres
          CLIENTS_PULP_SERVER: http://localhost:8080
          CLIENTS_PULP_USERNAME: admin
          CLIENTS_PULP_PASSWORD: password


