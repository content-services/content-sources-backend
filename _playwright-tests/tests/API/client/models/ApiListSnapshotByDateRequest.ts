/* tslint:disable */
/* eslint-disable */
/**
 * ContentSourcesBackend
 * The API for the repositories of the content sources that you can use to create and manage repositories between third-party applications and the [Red Hat Hybrid Cloud Console](https://console.redhat.com). With these repositories, you can build and deploy images using Image Builder for Cloud, on-Premise, and Edge. You can handle tasks, search for required RPMs, fetch a GPGKey from the URL, and list the features within applications. 
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ApiListSnapshotByDateRequest
 */
export interface ApiListSnapshotByDateRequest {
    /**
     * Exact date to search by.
     * @type {string}
     * @memberof ApiListSnapshotByDateRequest
     */
    date: string;
    /**
     * Repository UUIDs to find snapshots for
     * @type {Array<string>}
     * @memberof ApiListSnapshotByDateRequest
     */
    repositoryUuids: Array<string>;
}

/**
 * Check if a given object implements the ApiListSnapshotByDateRequest interface.
 */
export function instanceOfApiListSnapshotByDateRequest(value: object): value is ApiListSnapshotByDateRequest {
    if (!('date' in value) || value['date'] === undefined) return false;
    if (!('repositoryUuids' in value) || value['repositoryUuids'] === undefined) return false;
    return true;
}

export function ApiListSnapshotByDateRequestFromJSON(json: any): ApiListSnapshotByDateRequest {
    return ApiListSnapshotByDateRequestFromJSONTyped(json, false);
}

export function ApiListSnapshotByDateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiListSnapshotByDateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'date': json['date'],
        'repositoryUuids': json['repository_uuids'],
    };
}

export function ApiListSnapshotByDateRequestToJSON(json: any): ApiListSnapshotByDateRequest {
    return ApiListSnapshotByDateRequestToJSONTyped(json, false);
}

export function ApiListSnapshotByDateRequestToJSONTyped(value?: ApiListSnapshotByDateRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'date': value['date'],
        'repository_uuids': value['repositoryUuids'],
    };
}

