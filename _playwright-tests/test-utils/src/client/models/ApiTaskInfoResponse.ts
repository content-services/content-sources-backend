/* tslint:disable */
/* eslint-disable */
/**
 * ContentSourcesBackend
 * The API for the repositories of the content sources that you can use to create and manage repositories between third-party applications and the [Red Hat Hybrid Cloud Console](https://console.redhat.com). With these repositories, you can build and deploy images using Image Builder for Cloud, on-Premise, and Edge. You can handle tasks, search for required RPMs, fetch a GPGKey from the URL, and list the features within applications. 
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ApiTaskInfoResponse
 */
export interface ApiTaskInfoResponse {
    /**
     * Timestamp of task creation
     * @type {string}
     * @memberof ApiTaskInfoResponse
     */
    createdAt?: string;
    /**
     * UUIDs of parent tasks
     * @type {Array<string>}
     * @memberof ApiTaskInfoResponse
     */
    dependencies?: Array<string>;
    /**
     * UUIDs of child tasks
     * @type {Array<string>}
     * @memberof ApiTaskInfoResponse
     */
    dependents?: Array<string>;
    /**
     * Timestamp task ended running at
     * @type {string}
     * @memberof ApiTaskInfoResponse
     */
    endedAt?: string;
    /**
     * Error thrown while running task
     * @type {string}
     * @memberof ApiTaskInfoResponse
     */
    error?: string;
    /**
     * Name of the associated repository or template
     * @type {string}
     * @memberof ApiTaskInfoResponse
     */
    objectName?: string;
    /**
     * Type of the associated object, either repository or template
     * @type {string}
     * @memberof ApiTaskInfoResponse
     */
    objectType?: string;
    /**
     * UUID of the associated repository or template
     * @type {string}
     * @memberof ApiTaskInfoResponse
     */
    objectUuid?: string;
    /**
     * Organization ID of the owner
     * @type {string}
     * @memberof ApiTaskInfoResponse
     */
    orgId?: string;
    /**
     * Status of task (running, failed, completed, canceled, pending)
     * @type {string}
     * @memberof ApiTaskInfoResponse
     */
    status?: string;
    /**
     * Type of task
     * @type {string}
     * @memberof ApiTaskInfoResponse
     */
    type?: string;
    /**
     * UUID of the object
     * @type {string}
     * @memberof ApiTaskInfoResponse
     */
    uuid?: string;
}

/**
 * Check if a given object implements the ApiTaskInfoResponse interface.
 */
export function instanceOfApiTaskInfoResponse(value: object): value is ApiTaskInfoResponse {
    return true;
}

export function ApiTaskInfoResponseFromJSON(json: any): ApiTaskInfoResponse {
    return ApiTaskInfoResponseFromJSONTyped(json, false);
}

export function ApiTaskInfoResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiTaskInfoResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'createdAt': json['created_at'] == null ? undefined : json['created_at'],
        'dependencies': json['dependencies'] == null ? undefined : json['dependencies'],
        'dependents': json['dependents'] == null ? undefined : json['dependents'],
        'endedAt': json['ended_at'] == null ? undefined : json['ended_at'],
        'error': json['error'] == null ? undefined : json['error'],
        'objectName': json['object_name'] == null ? undefined : json['object_name'],
        'objectType': json['object_type'] == null ? undefined : json['object_type'],
        'objectUuid': json['object_uuid'] == null ? undefined : json['object_uuid'],
        'orgId': json['org_id'] == null ? undefined : json['org_id'],
        'status': json['status'] == null ? undefined : json['status'],
        'type': json['type'] == null ? undefined : json['type'],
        'uuid': json['uuid'] == null ? undefined : json['uuid'],
    };
}

export function ApiTaskInfoResponseToJSON(json: any): ApiTaskInfoResponse {
    return ApiTaskInfoResponseToJSONTyped(json, false);
}

export function ApiTaskInfoResponseToJSONTyped(value?: ApiTaskInfoResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'created_at': value['createdAt'],
        'dependencies': value['dependencies'],
        'dependents': value['dependents'],
        'ended_at': value['endedAt'],
        'error': value['error'],
        'object_name': value['objectName'],
        'object_type': value['objectType'],
        'object_uuid': value['objectUuid'],
        'org_id': value['orgId'],
        'status': value['status'],
        'type': value['type'],
        'uuid': value['uuid'],
    };
}

