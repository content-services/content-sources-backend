/* tslint:disable */
/* eslint-disable */
/**
 * ContentSourcesBackend
 * The API for the repositories of the content sources that you can use to create and manage repositories between third-party applications and the [Red Hat Hybrid Cloud Console](https://console.redhat.com). With these repositories, you can build and deploy images using Image Builder for Cloud, on-Premise, and Edge. You can handle tasks, search for required RPMs, fetch a GPGKey from the URL, and list the features within applications. 
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ApiRepositoryIntrospectRequest
 */
export interface ApiRepositoryIntrospectRequest {
    /**
     * Reset the failed introspections count
     * @type {boolean}
     * @memberof ApiRepositoryIntrospectRequest
     */
    resetCount?: boolean;
}

/**
 * Check if a given object implements the ApiRepositoryIntrospectRequest interface.
 */
export function instanceOfApiRepositoryIntrospectRequest(value: object): value is ApiRepositoryIntrospectRequest {
    return true;
}

export function ApiRepositoryIntrospectRequestFromJSON(json: any): ApiRepositoryIntrospectRequest {
    return ApiRepositoryIntrospectRequestFromJSONTyped(json, false);
}

export function ApiRepositoryIntrospectRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiRepositoryIntrospectRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'resetCount': json['reset_count'] == null ? undefined : json['reset_count'],
    };
}

export function ApiRepositoryIntrospectRequestToJSON(json: any): ApiRepositoryIntrospectRequest {
    return ApiRepositoryIntrospectRequestToJSONTyped(json, false);
}

export function ApiRepositoryIntrospectRequestToJSONTyped(value?: ApiRepositoryIntrospectRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'reset_count': value['resetCount'],
    };
}

