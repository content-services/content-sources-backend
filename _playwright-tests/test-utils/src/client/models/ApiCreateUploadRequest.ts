/* tslint:disable */
/* eslint-disable */
/**
 * ContentSourcesBackend
 * The API for the repositories of the content sources that you can use to create and manage repositories between third-party applications and the [Red Hat Hybrid Cloud Console](https://console.redhat.com). With these repositories, you can build and deploy images using Image Builder for Cloud, on-Premise, and Edge. You can handle tasks, search for required RPMs, fetch a GPGKey from the URL, and list the features within applications. 
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ApiCreateUploadRequest
 */
export interface ApiCreateUploadRequest {
    /**
     * Size of the chunk
     * @type {number}
     * @memberof ApiCreateUploadRequest
     */
    chunkSize: number;
    /**
     * SHA-256 checksum of the file
     * @type {string}
     * @memberof ApiCreateUploadRequest
     */
    sha256: string;
    /**
     * Size of the upload in bytes
     * @type {number}
     * @memberof ApiCreateUploadRequest
     */
    size: number;
}

/**
 * Check if a given object implements the ApiCreateUploadRequest interface.
 */
export function instanceOfApiCreateUploadRequest(value: object): value is ApiCreateUploadRequest {
    if (!('chunkSize' in value) || value['chunkSize'] === undefined) return false;
    if (!('sha256' in value) || value['sha256'] === undefined) return false;
    if (!('size' in value) || value['size'] === undefined) return false;
    return true;
}

export function ApiCreateUploadRequestFromJSON(json: any): ApiCreateUploadRequest {
    return ApiCreateUploadRequestFromJSONTyped(json, false);
}

export function ApiCreateUploadRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiCreateUploadRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'chunkSize': json['chunk_size'],
        'sha256': json['sha256'],
        'size': json['size'],
    };
}

export function ApiCreateUploadRequestToJSON(json: any): ApiCreateUploadRequest {
    return ApiCreateUploadRequestToJSONTyped(json, false);
}

export function ApiCreateUploadRequestToJSONTyped(value?: ApiCreateUploadRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'chunk_size': value['chunkSize'],
        'sha256': value['sha256'],
        'size': value['size'],
    };
}

