/* tslint:disable */
/* eslint-disable */
/**
 * ContentSourcesBackend
 * The API for the repositories of the content sources that you can use to create and manage repositories between third-party applications and the [Red Hat Hybrid Cloud Console](https://console.redhat.com). With these repositories, you can build and deploy images using Image Builder for Cloud, on-Premise, and Edge. You can handle tasks, search for required RPMs, fetch a GPGKey from the URL, and list the features within applications. 
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ApiSnapshotResponse } from './ApiSnapshotResponse';
import {
    ApiSnapshotResponseFromJSON,
    ApiSnapshotResponseFromJSONTyped,
    ApiSnapshotResponseToJSON,
    ApiSnapshotResponseToJSONTyped,
} from './ApiSnapshotResponse';

/**
 * 
 * @export
 * @interface ApiSnapshotForDate
 */
export interface ApiSnapshotForDate {
    /**
     * Is the snapshot after the specified date
     * @type {boolean}
     * @memberof ApiSnapshotForDate
     */
    isAfter?: boolean;
    /**
     * This is the snapshot (if found)
     * @type {ApiSnapshotResponse}
     * @memberof ApiSnapshotForDate
     */
    match?: ApiSnapshotResponse;
    /**
     * Repository uuid for associated snapshot
     * @type {string}
     * @memberof ApiSnapshotForDate
     */
    repositoryUuid?: string;
}

/**
 * Check if a given object implements the ApiSnapshotForDate interface.
 */
export function instanceOfApiSnapshotForDate(value: object): value is ApiSnapshotForDate {
    return true;
}

export function ApiSnapshotForDateFromJSON(json: any): ApiSnapshotForDate {
    return ApiSnapshotForDateFromJSONTyped(json, false);
}

export function ApiSnapshotForDateFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiSnapshotForDate {
    if (json == null) {
        return json;
    }
    return {
        
        'isAfter': json['is_after'] == null ? undefined : json['is_after'],
        'match': json['match'] == null ? undefined : ApiSnapshotResponseFromJSON(json['match']),
        'repositoryUuid': json['repository_uuid'] == null ? undefined : json['repository_uuid'],
    };
}

export function ApiSnapshotForDateToJSON(json: any): ApiSnapshotForDate {
    return ApiSnapshotForDateToJSONTyped(json, false);
}

export function ApiSnapshotForDateToJSONTyped(value?: ApiSnapshotForDate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'is_after': value['isAfter'],
        'match': ApiSnapshotResponseToJSON(value['match']),
        'repository_uuid': value['repositoryUuid'],
    };
}

