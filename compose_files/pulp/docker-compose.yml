version: '3'
services:
  postgres:
    image: "docker.io/library/postgres:13"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: pulp
      POSTGRES_PASSWORD: password
      POSTGRES_DB: pulp
      POSTGRES_INITDB_ARGS: '--auth-host=scram-sha-256'
      POSTGRES_HOST_AUTH_METHOD: 'scram-sha-256'
    volumes:
      - "pg_data:/var/lib/postgresql"
      - "./assets/postgres/passwd:/etc/passwd:Z"
    restart: always
    healthcheck:
      test: pg_isready
      interval: 5s
      retries: 10
      timeout: 3s

  migration_service:
    image: "quay.io/cloudservices/pulp-ubi:latest"
    depends_on:
      postgres:
        condition: service_healthy
    command: pulpcore-manager migrate --noinput
    restart: on-failure
    volumes:
      - "./assets/settings.py:/etc/pulp/settings.py:z"
      - "./assets/certs:/etc/pulp/certs:z"
      - "pulp:/var/lib/pulp"      

  set_init_password_service:
    image:  "quay.io/cloudservices/pulp-ubi:latest"
    command: set_init_password.sh
    depends_on:
      migration_service:
        condition: service_completed_successfully
    environment:
      PULP_DEFAULT_ADMIN_PASSWORD: password
    volumes:
      - "./assets/settings.py:/etc/pulp/settings.py:z"
      - "./assets/certs:/etc/pulp/certs:z"
      - "pulp:/var/lib/pulp"

  redis:
    image: "docker.io/library/redis:latest"
    volumes:
      - "redis_data:/data"
    restart: always
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]

  pulp_api:
    image: "quay.io/cloudservices/pulp-ubi:latest"
    deploy:
      replicas: 1
    command: [ 'pulp-api' ]
    depends_on:
      migration_service:
        condition: service_completed_successfully
    hostname: pulp-api
    user: pulp
    volumes:
      - "./assets/settings.py:/etc/pulp/settings.py:z"
      - "./assets/certs:/etc/pulp/certs:z"
      - "pulp:/var/lib/pulp"
    environment:
      POSTGRES_SERVICE_PORT: 5432
      POSTGRES_SERVICE_HOST: postgres
      PULP_ADMIN_PASSWORD: password
      PULP_DOMAIN_ENABLED: "true"
      PULP_API_ROOT: /api/pulp/
      PULP_CONTENT_ORIGIN: "http://pulp.content:8080/"
      PULP_CONTENT_PATH_PREFIX: "/pulp/content/"
    restart: always

  pulp_content:
    image: "quay.io/cloudservices/pulp-ubi:latest"
    deploy:
      replicas: 1
    command: [ 'pulp-content' ]
    depends_on:
      migration_service:
        condition: service_completed_successfully
    hostname: pulp-content
    user: pulp
    volumes:
      - "./assets/settings.py:/etc/pulp/settings.py:z"
      - "./assets/certs:/etc/pulp/certs:z"
      - "pulp:/var/lib/pulp"
    environment:
      POSTGRES_SERVICE_PORT: 5432
      POSTGRES_SERVICE_HOST: postgres
      PULP_DOMAIN_ENABLED: "true"
      PULP_API_ROOT: /api/pulp/
      PULP_CONTENT_ORIGIN: "http://pulp.content:8080/"
      PULP_CONTENT_PATH_PREFIX: "/pulp/content/"
    restart: always

  pulp_web:
    image: "pulp/pulp-web:latest"
    command: [ '/usr/bin/nginx.sh' ]
    depends_on:
      migration_service:
        condition: service_completed_successfully
    ports:
      - "8080:8080"
    hostname: pulp
    user: root
    volumes:
      - "./assets/bin/nginx.sh:/usr/bin/nginx.sh:Z"
      - "./assets/nginx/nginx.conf.template:/etc/opt/rh/rh-nginx116/nginx/nginx.conf.template:Z"
    restart: always

  pulp_worker:
    image: "quay.io/cloudservices/pulp-ubi:latest"
    deploy:
      replicas: 2
    command: [ 'pulp-worker' ]
    depends_on:
      migration_service:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
    user: pulp
    volumes:
      - "./assets/settings.py:/etc/pulp/settings.py:z"
      - "./assets/certs:/etc/pulp/certs:z"
      - "pulp:/var/lib/pulp"
    environment:
      POSTGRES_SERVICE_PORT: 5432
      POSTGRES_SERVICE_HOST: postgres
      PULP_DOMAIN_ENABLED: "true"
      PULP_API_ROOT: /api/pulp/
      PULP_CONTENT_ORIGIN: "http://pulp.content:8080/"
      PULP_CONTENT_PATH_PREFIX: "/pulp/content/"
    restart: always
  minio:
    image: quay.io/minio/minio
    hostname: minio
    command: server /data --console-address ":9001"
    ports:
      - 9002:9000
      - 9001:9001
volumes:
  pulp:
    name: pulp${DEV_VOLUME_SUFFIX:-dev}
  pg_data:
    name: pg_data${DEV_VOLUME_SUFFIX:-dev}
  redis_data:
    name: redis_data${DEV_VOLUME_SUFFIX:-dev}
