{
    "components": {
        "schemas": {
            "api.FetchGPGKeyResponse": {
                "properties": {
                    "gpg_key": {
                        "description": "The downloaded GPG Keys from the provided url.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "api.GenericAttributeValidationResponse": {
                "properties": {
                    "error": {
                        "description": "Error message if the attribute is not valid",
                        "type": "string"
                    },
                    "skipped": {
                        "description": "Skipped if the attribute is not passed in for validation",
                        "type": "boolean"
                    },
                    "valid": {
                        "description": "Valid if not skipped and the provided attribute is valid",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "api.Links": {
                "properties": {
                    "first": {
                        "description": "Path to first page of results",
                        "type": "string"
                    },
                    "last": {
                        "description": "Path to last page of results",
                        "type": "string"
                    },
                    "next": {
                        "description": "Path to next page of results",
                        "type": "string"
                    },
                    "prev": {
                        "description": "Path to previous page of results",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "api.RepositoryBulkCreateResponse": {
                "properties": {
                    "error": {
                        "description": "Error during creation",
                        "type": "string"
                    },
                    "repository": {
                        "$ref": "#/components/schemas/api.RepositoryResponse"
                    }
                },
                "type": "object"
            },
            "api.RepositoryCollectionResponse": {
                "properties": {
                    "data": {
                        "description": "Requested Data",
                        "items": {
                            "$ref": "#/components/schemas/api.RepositoryResponse"
                        },
                        "type": "array"
                    },
                    "links": {
                        "$ref": "#/components/schemas/api.Links"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/api.ResponseMetadata"
                    }
                },
                "type": "object"
            },
            "api.RepositoryParameterResponse": {
                "properties": {
                    "distribution_arches": {
                        "description": "Architectures available for repository creation",
                        "items": {
                            "$ref": "#/components/schemas/config.DistributionArch"
                        },
                        "type": "array"
                    },
                    "distribution_versions": {
                        "description": "Versions available for repository creation",
                        "items": {
                            "$ref": "#/components/schemas/config.DistributionVersion"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "api.RepositoryRequest": {
                "properties": {
                    "distribution_arch": {
                        "description": "Architecture to restrict client usage to",
                        "example": "x86_64",
                        "type": "string"
                    },
                    "distribution_versions": {
                        "description": "Versions to restrict client usage to",
                        "example": [
                            "7",
                            "8"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "gpg_key": {
                        "description": "GPG key for repository",
                        "type": "string"
                    },
                    "metadata_verification": {
                        "description": "Verify packages",
                        "type": "boolean"
                    },
                    "name": {
                        "description": "Name of the remote yum repository",
                        "type": "string"
                    },
                    "url": {
                        "description": "URL of the remote yum repository",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "api.RepositoryResponse": {
                "properties": {
                    "account_id": {
                        "description": "Account ID of the owner",
                        "readOnly": true,
                        "type": "string"
                    },
                    "distribution_arch": {
                        "description": "Architecture to restrict client usage to",
                        "example": "x86_64",
                        "type": "string"
                    },
                    "distribution_versions": {
                        "description": "Versions to restrict client usage to",
                        "example": [
                            "7",
                            "8"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "gpg_key": {
                        "description": "GPG key for repository",
                        "type": "string"
                    },
                    "last_introspection_error": {
                        "description": "Error of last attempted introspection",
                        "type": "string"
                    },
                    "last_introspection_time": {
                        "description": "Timestamp of last attempted introspection",
                        "type": "string"
                    },
                    "last_success_introspection_time": {
                        "description": "Timestamp of last successful introspection",
                        "type": "string"
                    },
                    "last_update_introspection_time": {
                        "description": "Timestamp of last introspection that had updates",
                        "type": "string"
                    },
                    "metadata_verification": {
                        "description": "Verify packages",
                        "type": "boolean"
                    },
                    "name": {
                        "description": "Name of the remote yum repository",
                        "type": "string"
                    },
                    "org_id": {
                        "description": "Organization ID of the owner",
                        "readOnly": true,
                        "type": "string"
                    },
                    "package_count": {
                        "description": "Number of packages last read in the repository",
                        "type": "integer"
                    },
                    "status": {
                        "description": "Status of repository introspection (Valid, Invalid, Unavailable, Pending)",
                        "type": "string"
                    },
                    "url": {
                        "description": "URL of the remote yum repository",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "UUID of the object",
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "api.RepositoryRpm": {
                "properties": {
                    "arch": {
                        "description": "The Architecture of the rpm",
                        "type": "string"
                    },
                    "checksum": {
                        "description": "The checksum of the rpm",
                        "type": "string"
                    },
                    "epoch": {
                        "description": "The epoch of the rpm",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The rpm package name",
                        "type": "string"
                    },
                    "release": {
                        "description": "The release of the rpm",
                        "type": "string"
                    },
                    "summary": {
                        "description": "The summary of the rpm",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "Identifier of the rpm",
                        "type": "string"
                    },
                    "version": {
                        "description": "The version of the  rpm",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "api.RepositoryRpmCollectionResponse": {
                "properties": {
                    "data": {
                        "description": "List of rpms",
                        "items": {
                            "$ref": "#/components/schemas/api.RepositoryRpm"
                        },
                        "type": "array"
                    },
                    "links": {
                        "$ref": "#/components/schemas/api.Links"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/api.ResponseMetadata"
                    }
                },
                "type": "object"
            },
            "api.RepositoryValidationRequest": {
                "properties": {
                    "gpg_key": {
                        "description": "GPGKey of the remote yum repository",
                        "type": "string"
                    },
                    "metadata_verification": {
                        "description": "If set, attempt to validate the yum metadata with the specified GPG Key",
                        "type": "boolean"
                    },
                    "name": {
                        "description": "Name of the remote yum repository",
                        "type": "string"
                    },
                    "url": {
                        "description": "URL of the remote yum repository",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "If set, this is an \"Update\" validation",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "api.RepositoryValidationResponse": {
                "properties": {
                    "gpg_key": {
                        "$ref": "#/components/schemas/api.GenericAttributeValidationResponse"
                    },
                    "name": {
                        "$ref": "#/components/schemas/api.GenericAttributeValidationResponse"
                    },
                    "url": {
                        "$ref": "#/components/schemas/api.UrlValidationResponse"
                    }
                },
                "type": "object"
            },
            "api.ResponseMetadata": {
                "properties": {
                    "count": {
                        "description": "Total count of results",
                        "type": "integer"
                    },
                    "limit": {
                        "description": "Limit of results used for the request",
                        "type": "integer"
                    },
                    "offset": {
                        "description": "Offset into results used for the request",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "api.SearchRpmRequest": {
                "properties": {
                    "search": {
                        "description": "Search string to search rpm names",
                        "type": "string"
                    },
                    "urls": {
                        "description": "URLs of repositories to search",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "uuids": {
                        "description": "List of RepositoryConfig UUIDs to search",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "api.SearchRpmResponse": {
                "properties": {
                    "package_name": {
                        "description": "Package name found",
                        "type": "string"
                    },
                    "summary": {
                        "description": "Summary of the package found",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "api.UrlValidationResponse": {
                "properties": {
                    "error": {
                        "description": "Error message if the attribute is not valid",
                        "type": "string"
                    },
                    "http_code": {
                        "description": "If the metadata cannot be fetched successfully, the http code that is returned if the http request was completed",
                        "type": "integer"
                    },
                    "metadata_present": {
                        "description": "True if the metadata can be fetched successfully",
                        "type": "boolean"
                    },
                    "metadata_signature_present": {
                        "description": "True if a repomd.xml.sig file was found in the repository",
                        "type": "boolean"
                    },
                    "skipped": {
                        "description": "Skipped if the URL is not passed in for validation",
                        "type": "boolean"
                    },
                    "valid": {
                        "description": "Valid if not skipped and the provided attribute is valid",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "config.DistributionArch": {
                "properties": {
                    "label": {
                        "description": "Static label of the arch",
                        "type": "string"
                    },
                    "name": {
                        "description": "Human-readable form of the arch",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "config.DistributionVersion": {
                "properties": {
                    "label": {
                        "description": "Static label of the version",
                        "type": "string"
                    },
                    "name": {
                        "description": "Human-readable form of the version",
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "RhIdentity": {
                "in": "header",
                "name": "x-rh-identity",
                "type": "apiKey"
            }
        }
    },
    "info": {
        "contact": {},
        "description": "API of the Content Sources application on [console.redhat.com](https://console.redhat.com)\n",
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0"
        },
        "title": "ContentSourcesBackend",
        "version": "v1.0.0"
    },
    "openapi": "3.0.3",
    "paths": {
        "/repositories/": {
            "get": {
                "description": "list repositories",
                "operationId": "listRepositories",
                "parameters": [
                    {
                        "description": "Offset into the list of results to return in the response",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Limit the number of items returned",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Comma separated list of architecture to optionally filter-on (e.g. 'x86_64,s390x' would return Repositories with x86_64 or s390x only)",
                        "in": "query",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Comma separated list of versions to optionally filter-on  (e.g. '7,8' would return Repositories with versions 7 or 8 only)",
                        "in": "query",
                        "name": "arch",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter by compatible arch (e.g. 'x86_64' would return Repositories with the 'x86_64' arch and Repositories where arch is not set)",
                        "in": "query",
                        "name": "available_for_version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter by compatible version (e.g. 7 would return Repositories with the version 7 or where version is not set)",
                        "in": "query",
                        "name": "available_for_arch",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Search term for name and url.",
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.RepositoryCollectionResponse"
                                }
                            }
                        },
                        "description": "OK"
                    }
                },
                "summary": "List Repositories",
                "tags": [
                    "repositories"
                ]
            },
            "post": {
                "description": "create a repository",
                "operationId": "createRepository",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/api.RepositoryRequest"
                            }
                        }
                    },
                    "description": "request body",
                    "required": true,
                    "x-originalParamName": "body"
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.RepositoryResponse"
                                }
                            }
                        },
                        "description": "Created",
                        "headers": {
                            "Location": {
                                "description": "resource URL",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "summary": "Create Repository",
                "tags": [
                    "repositories"
                ]
            }
        },
        "/repositories/bulk_create/": {
            "post": {
                "description": "bulk create repositories",
                "operationId": "bulkCreateRepositories",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/api.RepositoryRequest"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "request body",
                    "required": true,
                    "x-originalParamName": "body"
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/api.RepositoryBulkCreateResponse"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Created",
                        "headers": {
                            "Location": {
                                "description": "resource URL",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "summary": "Bulk create repositories",
                "tags": [
                    "repositories"
                ]
            }
        },
        "/repositories/{uuid}": {
            "delete": {
                "operationId": "deleteRepository",
                "parameters": [
                    {
                        "description": "Identifier of the Repository",
                        "in": "path",
                        "name": "uuid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Repository was successfully deleted"
                    }
                },
                "summary": "Delete a repository",
                "tags": [
                    "repositories"
                ]
            },
            "get": {
                "description": "Get information about a Repository",
                "operationId": "getRepository",
                "parameters": [
                    {
                        "description": "Identifier of the Repository",
                        "in": "path",
                        "name": "uuid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.RepositoryResponse"
                                }
                            }
                        },
                        "description": "OK"
                    }
                },
                "summary": "Get Repository",
                "tags": [
                    "repositories"
                ]
            },
            "patch": {
                "description": "Partially Update a repository",
                "operationId": "partialUpdateRepository",
                "parameters": [
                    {
                        "description": "Identifier of the Repository",
                        "in": "path",
                        "name": "uuid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/api.RepositoryRequest"
                            }
                        }
                    },
                    "description": "request body",
                    "required": true,
                    "x-originalParamName": "body"
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "OK"
                    }
                },
                "summary": "Partial Update Repository",
                "tags": [
                    "repositories"
                ]
            },
            "put": {
                "description": "Fully update a repository",
                "operationId": "fullUpdateRepository",
                "parameters": [
                    {
                        "description": "Identifier of the Repository",
                        "in": "path",
                        "name": "uuid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/api.RepositoryRequest"
                            }
                        }
                    },
                    "description": "request body",
                    "required": true,
                    "x-originalParamName": "body"
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "OK"
                    }
                },
                "summary": "Update Repository",
                "tags": [
                    "repositories"
                ]
            }
        },
        "/repositories/{uuid}/rpms": {
            "get": {
                "description": "list repositories RPMs",
                "operationId": "listRepositoriesRpms",
                "parameters": [
                    {
                        "description": "Identifier of the Repository",
                        "in": "path",
                        "name": "uuid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.RepositoryRpmCollectionResponse"
                                }
                            }
                        },
                        "description": "OK"
                    }
                },
                "summary": "List Repositories RPMs",
                "tags": [
                    "repositories",
                    "rpms"
                ]
            }
        },
        "/repository_parameters/": {
            "get": {
                "description": "get repository parameters (Versions and Architectures)",
                "operationId": "listRepositoryParameters",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.RepositoryParameterResponse"
                                }
                            }
                        },
                        "description": "OK"
                    }
                },
                "summary": "List Repository Parameters",
                "tags": [
                    "repositories"
                ]
            }
        },
        "/repository_parameters/external_gpg_key": {
            "post": {
                "description": "Fetch gpgkey from URL",
                "operationId": "fetchGpgKey",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.FetchGPGKeyResponse"
                                }
                            }
                        },
                        "description": "OK"
                    }
                },
                "summary": "Fetch gpgkey from URL",
                "tags": [
                    "gpgKey"
                ]
            }
        },
        "/repository_parameters/validate/": {
            "post": {
                "description": "Validate parameters prior to creating a repository, including checking if remote yum metadata is present",
                "operationId": "validateRepositoryParameters",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/api.RepositoryValidationRequest"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "request body",
                    "required": true,
                    "x-originalParamName": "body"
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/api.RepositoryValidationResponse"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    }
                },
                "summary": "Validate parameters prior to creating a repository",
                "tags": [
                    "repositories"
                ]
            }
        },
        "/rpms/names": {
            "post": {
                "description": "Search RPMs for a given list of repository URLs",
                "operationId": "searchRpm",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/api.SearchRpmRequest"
                            }
                        }
                    },
                    "description": "request body",
                    "required": true,
                    "x-originalParamName": "body"
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/api.SearchRpmResponse"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    }
                },
                "summary": "Search RPMs",
                "tags": [
                    "repositories",
                    "rpms"
                ]
            }
        }
    },
    "servers": [
        {
            "url": "https://api.example.com/api/content-sources/v1.0/"
        }
    ]
}